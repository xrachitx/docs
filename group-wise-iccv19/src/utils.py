# AUTOGENERATED! DO NOT EDIT! File to edit: 03_utils.ipynb (unless otherwise specified).

__all__ = ['printgradnormSIR', 'printgradnormCARU', 'printgradnormMFF', 'tboard_imlist']

# Cell

import torch

def printgradnormSIR(self, grad_input, grad_output):
    """ Debug stuff """
    print('Inside SIR' + self.__class__.__name__ + ' backward')
    print('Inside class:' + self.__class__.__name__)
    print('grad_input norm:', grad_input[0].norm())
    print('----')

def printgradnormCARU(self, grad_input, grad_output):
    print('Inside caru' + self.__class__.__name__ + ' backward')
    print('Inside class:' + self.__class__.__name__)
    print('grad_input norm:', grad_input[0].norm())
    print('----')

def printgradnormMFF(self, grad_input, grad_output):
    print('Inside MFF' + self.__class__.__name__ + ' backward')
    print('Inside class:' + self.__class__.__name__)
    print('grad_input norm:', grad_input[0].norm())
    print('----')

def tboard_imlist(imlist, title, step, writer):
    """ Takes as input a list of tensors to be added at tensorboard """
    imgs = imlist[0]
    for im in imlist[1:]:
        imgs = torch.cat((imgs, im), dim=0)
    writer.add_images(title, imgs, step, dataformats='NCHW')
