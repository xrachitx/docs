# AUTOGENERATED! DO NOT EDIT! File to edit: 02_dataloader.ipynb (unless otherwise specified).

__all__ = ['Coseg']

# Cell
import os
from torch.utils.data import Dataset, DataLoader
from torchvision import transforms as T
import matplotlib.pyplot as plt
from PIL import Image

# Cell

class Coseg(Dataset):
    """ Dataset implementation for the iCoseg datas
    Args:
        root_dir (string): Directory with all the images.
        transform (callable, optional): Optional transform to be applied on a sample.
    """

    def __init__(self, img_set='images/', gt_set='ground_truth/', root_dir="./data/",
                 transform=T.Compose([T.Resize((224,224)), T.ToTensor()])):

        self.root_dir = root_dir
        self.img_set = img_set
        self.gt_set = gt_set
        self.transform = transform
        self.imgs = [x for x in os.listdir(self.root_dir + self.img_set) if (x[-3:] == 'png') or (x[-3:] == 'jpg')]

    def __len__(self):
        return len(self.imgs)


    def __getitem__(self, idx):
        img = Image.open(self.root_dir + self.img_set + self.imgs[idx])
        gt = Image.open(self.root_dir + self.gt_set + self.imgs[idx][:-3] + 'png')
        # black,white = np.unique(gt,return_counts= True)[1]
        print( np.unique(gt,return_counts= True))
        if self.transform:
            img = self.transform(img)
            gt = self.transform(gt)

        return img, gt
